{"version":3,"sources":["app/mouse.cljs"],"mappings":";;;;AAKA,AAAA,AAAKA;AAEL,AAAA,AAAMC,AAAKC;AAAX,AAAc,AAAA,AAAgBA;;AAE9B,AAAKC,AAAO,AAAA,AAACC;AACb,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAKC;AAKL,AAAA,AAAMC,AAAYC,AAAGC;AAArB,AACE,AAAI,AAAA,AAAMA;AACR,AAAU,AAAA,AAAAC,AAAA,AAAON;AAAjB;;AAAA,AACE,AAAmBI,AAAG,AAAAG,AAAA,AAAAD,AAAQN;AAARQ,AAAA;AAAA,AAAA,AAAAD,AAAAC,AAAAD,AAAAC,AAACN,AAAAA,AAAAA;;;AACvB,AAAA,AAACO,AAAOT;;;AACV,AAAU,AAAA,AAAAM,AAACI,AAAGV,AAAOK;AAArB;;AAAA,AACE,AAAmBD,AAAG,AAAAO,AAAA,AAAAL,AAAQN;AAARY,AAAA;AAAA,AAAA,AAAAD,AAAAC,AAAAD,AAAAC,AAACV,AAAAA,AAAAA;;;AACvB,AAACO,AAAOT,AAAOK;;AACf,AAAmBD,AAAG,AAAAS,AAAA,AAAAP,AAAQN;AAARc,AAAA;AAAA,AAAA,AAAAD,AAAAC,AAAAD,AAAAC,AAACZ,AAAAA,AAAAA;;;;;AAE7B,AAAA,AAAMa,AAAaX;AAAnB,AACE,AAAMa,AAAG,AAAA,AAACC;AACJC,AAAU,AAAA,AAAClB;AACXmB,AAAO,AAAA,AAACnB;AACRoB,AAAQ,AAAKC;AAAL,AACE,AAAMC,AAAO,AAACC,AAAMC,AAAE,AAAA,AAAAC,AAACC;AAAD,AAAM,AAAAD;AAAN,AAAA,AAAApB,AAAsBa,AAAUG;AAChDM,AAAO,AAACJ,AAAMC,AAAE,AAAA,AAAAI,AAACF;AAAD,AAAM,AAAAE;AAAN,AAAA,AAAAvB,AAAsBa,AAAUG;AAChDQ,AAAK,AAACC,AAAYR;AAClBS,AAAK,AAACD,AAAYH;AAClBK,AAAE,AAACC,AAAa,AAAG,AAACpC,AAAIyB,AAAQ,AAACzB,AAAI8B;AACrCvB,AAAO,AAAA,AAAA,AACC,AAAG4B,AAAEpC,AACL,AAAAsC,AAAC,AAAA,AAAA,AAAA,AAAA,AAAK,AAAA,AAAMP,AAAQ,AAAGI,AAAKF;AAA5B,AAAA,AAAAK,AAAAA,AAAAA;AACA,AAAAC,AAAC,AAAA,AAAA,AAAA,AAAA,AAAK,AAAA,AAAMR,AAAQ,AAAGI,AAAKF;AAA5B,AAAA,AAAAM,AAAAA,AAAAA;AAHD,AAIC,AAAAC,AAAC,AAAA,AAAA,AAAA,AAAA,AAAK,AAAA,AAAMd,AAAQ,AAAGO,AAAKE;AAA5B,AAAA,AAAAK,AAAAA,AAAAA;AACA,AAAAC,AAAC,AAAA,AAAA,AAAA,AAAA,AAAK,AAAA,AAAMf,AAAQ,AAAGO,AAAKE;AAA5B,AAAA,AAAAM,AAAAA,AAAAA;AALD;AALb,AAWI,AAACnC,AAAWC,AAAGC;;AAfnC,AAAAW,AAgBMuB;AAhBN,AAgBgB,AAAAvB,AAACP,AAAOU;;AAhBxB,AAiBE,AAACqB,AAAcvB,AAAGwB,AAA4BF;;AAC9C,AAACC,AAAcvB,AAAGyB,AAA2BrB","names":["app.mouse/THRESHOLD","app.mouse/sqr","x","app.mouse/motion","cljs.core.atom.cljs$core$IFn$_invoke$arity$1","app.mouse/codes","app.mouse/control-ci","ci","action","cljs.core/deref","G__26733","G__26734","cljs.core/reset!","cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2","G__26735","G__26736","G__26737","G__26738","app.mouse/setup-mouse","p1__26741#","el","goog.dom/getElement","start-evt","motion","on-move","move-evt","deltaX","cljs.core.apply.cljs$core$IFn$_invoke$arity$2","cljs.core/-","p1__26739#","cljs.core.map.cljs$core$IFn$_invoke$arity$2","deltaY","p1__26740#","absX","js/Math.abs","absY","r","js/Math.sqrt","fexpr__26742","fexpr__26743","fexpr__26744","fexpr__26745","on-start","goog.events/listen","goog.events/EventType.TOUCHSTART","goog.events/EventType.TOUCHMOVE"],"sourcesContent":["(ns app.mouse\n  (:require\n   [goog.dom :as dom]\n   [goog.events :as events]))\n\n(def THRESHOLD 10)\n\n(defn sqr [x] (bit-shift-left x 1))\n\n(def motion (atom nil))\n(def codes {:up 38\n            :down 40\n            :left 37\n            :right 39})\n\n(defn control-ci [ci action]\n  (if (nil? action)\n    (when-not (nil? @motion)\n      (.simulateKeyEvent ci (codes @motion false))\n      (reset! motion nil))\n    (when-not (= @motion action)\n      (.simulateKeyEvent ci (codes @motion false))\n      (reset! motion action)\n      (.simulateKeyEvent ci (codes @motion true)))))\n\n(defn setup-mouse [ci]\n  (let [el (dom/getElement \"container\")\n        start-evt (atom nil)\n        motion (atom nil)\n        on-move (fn [move-evt]\n                  (let [deltaX (apply - (map #(.-clientX %) [@start-evt move-evt]))\n                        deltaY (apply - (map #(.-clientY %) [@start-evt move-evt]))\n                        absX (js/Math.abs deltaX)\n                        absY (js/Math.abs deltaY)\n                        r (js/Math.sqrt (+ (sqr deltaX) (sqr deltaY)))\n                        action (cond\n                                (< r THRESHOLD) nil\n                                ((and (neg? deltaY) (> absY absX) :up))\n                                ((and (pos? deltaY) (> absY absX) :down))\n                                ((and (neg? deltaX) (> absX absY) :left))\n                                ((and (pos? deltaX) (> absX absY) :right)))]\n                      (control-ci ci action)))\n        on-start #(reset! start-evt %)]\n    (events/listen el events/EventType.TOUCHSTART on-start)\n    (events/listen el events/EventType.TOUCHMOVE on-move)))\n"]}