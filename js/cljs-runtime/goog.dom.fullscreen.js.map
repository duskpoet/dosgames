{
"version":3,
"file":"goog.dom.fullscreen.js",
"lineCount":119,
"mappings":"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",
"sources":["goog/dom/fullscreen.js"],
"sourcesContent":["// Copyright 2012 The Closure Library Authors. All Rights Reserved.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS-IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\n/**\n * @fileoverview Functions for managing full screen status of the DOM.\n *\n */\n\ngoog.provide('goog.dom.fullscreen');\ngoog.provide('goog.dom.fullscreen.EventType');\n\ngoog.require('goog.dom');\n\n/**\n * Event types for full screen.\n * @enum {string}\n */\ngoog.dom.fullscreen.EventType = {\n  /** Dispatched by the Document when the fullscreen status changes. */\n  CHANGE: (function() {\n    var el = goog.dom.getDomHelper().getDocument().documentElement;\n    if (el.requestFullscreen) {\n      return 'fullscreenchange';\n    }\n    if (el.webkitRequestFullscreen) {\n      return 'webkitfullscreenchange';\n    }\n    if (el.mozRequestFullScreen) {\n      return 'mozfullscreenchange';\n    }\n    if (el.msRequestFullscreen) {\n      return 'MSFullscreenChange';\n    }\n    // Opera 12-14, and W3C standard (Draft):\n    // https://dvcs.w3.org/hg/fullscreen/raw-file/tip/Overview.html\n    return 'fullscreenchange';\n  })()\n};\n\n\n/**\n * Options for fullscreen navigation UI:\n * https://fullscreen.spec.whatwg.org/#dictdef-fullscreenoptions\n * @enum {string}\n */\ngoog.dom.fullscreen.FullscreenNavigationUI = {\n  AUTO: 'auto',\n  HIDE: 'hide',\n  SHOW: 'show'\n};\n\n/**\n * @record\n * @extends {FullscreenOptions}\n */\ngoog.dom.fullscreen.FullscreenOptions = function() {};\n\n/** @type {!goog.dom.fullscreen.FullscreenNavigationUI} */\ngoog.dom.fullscreen.FullscreenOptions.prototype.navigationUI;\n\n\n/**\n * Determines if full screen is supported.\n * @param {!goog.dom.DomHelper=} opt_domHelper The DomHelper for the DOM being\n *     queried. If not provided, use the current DOM.\n * @return {boolean} True iff full screen is supported.\n */\ngoog.dom.fullscreen.isSupported = function(opt_domHelper) {\n  var doc = goog.dom.fullscreen.getDocument_(opt_domHelper);\n  var body = doc.body;\n  return !!(\n      body.webkitRequestFullscreen ||\n      (body.mozRequestFullScreen && doc.mozFullScreenEnabled) ||\n      (body.msRequestFullscreen && doc.msFullscreenEnabled) ||\n      (body.requestFullscreen && doc.fullscreenEnabled));\n};\n\n\n/**\n * Requests putting the element in full screen.\n * @param {!Element} element The element to put full screen.\n * @param {!goog.dom.fullscreen.FullscreenOptions=} opt_options Options for full\n *     screen. This field will be ignored on older browsers.\n */\ngoog.dom.fullscreen.requestFullScreen = function(element, opt_options) {\n  if (element.requestFullscreen) {\n    element.requestFullscreen(opt_options);\n  } else if (element.webkitRequestFullscreen) {\n    element.webkitRequestFullscreen();\n  } else if (element.mozRequestFullScreen) {\n    element.mozRequestFullScreen();\n  } else if (element.msRequestFullscreen) {\n    element.msRequestFullscreen();\n  }\n};\n\n\n/**\n * Requests putting the element in full screen with full keyboard access.\n * @param {!Element} element The element to put full screen.\n */\ngoog.dom.fullscreen.requestFullScreenWithKeys = function(element) {\n  if (element.mozRequestFullScreenWithKeys) {\n    element.mozRequestFullScreenWithKeys();\n  } else {\n    goog.dom.fullscreen.requestFullScreen(element);\n  }\n};\n\n\n/**\n * Exits full screen.\n * @param {!goog.dom.DomHelper=} opt_domHelper The DomHelper for the DOM being\n *     queried. If not provided, use the current DOM.\n */\ngoog.dom.fullscreen.exitFullScreen = function(opt_domHelper) {\n  var doc = goog.dom.fullscreen.getDocument_(opt_domHelper);\n  if (doc.exitFullscreen) {\n    doc.exitFullscreen();\n  } else if (doc.webkitCancelFullScreen) {\n    doc.webkitCancelFullScreen();\n  } else if (doc.mozCancelFullScreen) {\n    doc.mozCancelFullScreen();\n  } else if (doc.msExitFullscreen) {\n    doc.msExitFullscreen();\n  }\n};\n\n\n/**\n * Determines if the document is full screen.\n * @param {!goog.dom.DomHelper=} opt_domHelper The DomHelper for the DOM being\n *     queried. If not provided, use the current DOM.\n * @return {boolean} Whether the document is full screen.\n */\ngoog.dom.fullscreen.isFullScreen = function(opt_domHelper) {\n  var doc = goog.dom.fullscreen.getDocument_(opt_domHelper);\n  // IE 11 doesn't have similar boolean property, so check whether\n  // document.msFullscreenElement is null instead.\n  return !!(\n      doc.webkitIsFullScreen || doc.mozFullScreen || doc.msFullscreenElement ||\n      doc.fullscreenElement);\n};\n\n\n/**\n * Get the root element in full screen mode.\n * @param {!goog.dom.DomHelper=} opt_domHelper The DomHelper for the DOM being\n *     queried. If not provided, use the current DOM.\n * @return {?Element} The root element in full screen mode.\n */\ngoog.dom.fullscreen.getFullScreenElement = function(opt_domHelper) {\n  var doc = goog.dom.fullscreen.getDocument_(opt_domHelper);\n  var element_list = [\n    doc.fullscreenElement, doc.webkitFullscreenElement,\n    doc.mozFullScreenElement, doc.msFullscreenElement\n  ];\n  for (var i = 0; i < element_list.length; i++) {\n    if (element_list[i] != null) {\n      return element_list[i];\n    }\n  }\n  return null;\n};\n\n\n/**\n * Gets the document object of the dom.\n * @param {!goog.dom.DomHelper=} opt_domHelper The DomHelper for the DOM being\n *     queried. If not provided, use the current DOM.\n * @return {!Document} The dom document.\n * @private\n */\ngoog.dom.fullscreen.getDocument_ = function(opt_domHelper) {\n  return opt_domHelper ? opt_domHelper.getDocument() :\n                         goog.dom.getDomHelper().getDocument();\n};\n"],
"names":["goog","provide","require","dom","fullscreen","EventType","CHANGE","el","getDomHelper","getDocument","documentElement","requestFullscreen","webkitRequestFullscreen","mozRequestFullScreen","msRequestFullscreen","FullscreenNavigationUI","AUTO","HIDE","SHOW","FullscreenOptions","goog.dom.fullscreen.FullscreenOptions","prototype","navigationUI","isSupported","goog.dom.fullscreen.isSupported","opt_domHelper","doc","getDocument_","body","mozFullScreenEnabled","msFullscreenEnabled","fullscreenEnabled","requestFullScreen","goog.dom.fullscreen.requestFullScreen","element","opt_options","requestFullScreenWithKeys","goog.dom.fullscreen.requestFullScreenWithKeys","mozRequestFullScreenWithKeys","exitFullScreen","goog.dom.fullscreen.exitFullScreen","exitFullscreen","webkitCancelFullScreen","mozCancelFullScreen","msExitFullscreen","isFullScreen","goog.dom.fullscreen.isFullScreen","webkitIsFullScreen","mozFullScreen","msFullscreenElement","fullscreenElement","getFullScreenElement","goog.dom.fullscreen.getFullScreenElement","element_list","webkitFullscreenElement","mozFullScreenElement","i","length","goog.dom.fullscreen.getDocument_"]
}
