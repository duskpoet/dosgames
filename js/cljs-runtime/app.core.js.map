{"version":3,"sources":["app/core.cljs"],"mappings":";;;;;;;;;;;;AAaA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAKA;AAML,AAAA,AAAMC,AAAcC,AAAGC,AAAMC;AAA7B,AACE,AAAAC,AACCH;AADDI,AAEC,AAAIH,AACFM,AACAC;AAJHH,AAKC,AAAKI;AAAL,AACE,AAAiBA;;AACjB,AAACP,AAAAA,AAAAA;;AAPJ,AAAA,AAAAC,AAAAC,AAAAC,AAACC;;AAQD,AAAAI,AACCV;AADDW,AAEC,AAAIV,AACFY,AACAC;AAJHF,AAKC,AAAKH;AAAL,AACE,AAAiBA;;AACjB,AAACP,AAAAA,AAAAA;;AAPJ,AAAA,AAAAQ,AAAAC,AAAAC,AAACN;;AASH,AAAA,AAAMS,AAAeC;AAArB,AACE,AAAMhB,AAAG,AAAA,AAACiB;AACJC,AAAK,AAGE,AAAA,AAAAE,AAACC,AAMDC;AANA,AAAM,AAAA,AAAA,AAAA,AAAA,AAEE,AAAAF,AAAAA,AAAA,AAAAA,AAAA,AAEA,AAAAA,AAAAA,AAAA,AAAAA,AAAA,AAAW,AAAAA,AAAAA,AAAA,AAAAA,AAAA;AANnBJ,AACAG,AACA;AAJb,AAWE,AAAAI,AAAOvB;AAAP,AAAA,AAAAwB,AAAAC;AAAAC,AAAA,AAAAC,AAAAJ,AAAA,AAAAK,AAAA;AAAA,AAAA,AAAAH,AAAAC;;AAAA,AAAA,AAAA,AAAA,AAAA,AAAAG,AAAAN;AAAA,AAAA,AAAA,AAAAO,AAAAD,AAAA,AAAA,AAAA,AAAA,AAAA;AAAA,AAAA,AAAAA,AAAA,AAAsBX;;AAAtB;;AAAAK;AAAA,AAAA,AAAAE,AAAAD;;AAEJ,AAAA,AAAMO;AAAN,AACE,AAAMC,AAAI,AAAA,AAACC;AACLjC,AAAG,AAAA,AAACiB;AADV,AAEE,AAAA,AAASe,AAAIE;AAAb,AAAiC,AAAA,AAAIF,AAAqBjB;;;AAE9D,AAAA,AAAMoB,AAAWC,AAAKC;AAAtB,AACE,AAAAC,AAAiBF;AAAjBG,AAAA,AAAAC,AAAAF;AAAAG,AAAA,AAAAC,AAAAH;AAAAA,AAAA,AAAAI,AAAAJ;AAAAE,AAAOG;AAAPL,AAAWM;AACLC,AAAK,AAAIF,AACEA,AACAG,AACA,AAAAC,AAAA;AAAA,AAAA,AAAAC,AAAAxB;AAAAyB,AAAA,AAAAvB,AAAAqB,AAAA,AAAApB,AAAA;AAAA,AAAA,AAAAH,AAAAyB;;AAAA,AAAA,AAAA,AAAA,AAAAC,AAAA,AAAA,AAAArB,AAAAkB,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAAA,AAAA,AAAA;AAAA,AAAA,AAAAI,AAAA,AAAA,AAAAtB,AAAAqB,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAAA,AAAA,AAAA;AAAA,AAAAC;AAAA,AAAA,AAAA3B,AAAAwB;AAHN;AADX,AAME,AAAI,AAACI,AAAOT;AACV,AAAA,AAAmBP;;AACnB,AACE,AAAmBA,AAAGS;;AACtB,AAAA,AAACQ;AAAD,AAAgB,AAACnB,AAAAA,AAAAA,AAAUU,AAAAA,AAAKR,AAAAA;AAAhC;;;AAER,AAAA,AAAMkB,AAAelB;AAArB,AACE,AAAMrC,AAAG,AAAA,AAACiB;AACJuC,AAAS,AAAK/C;AAAL,AACE,AAAMgD,AAAE,AAAAC,AAAMjD;AAAN,AAAA,AAAAkD,AAAAlC;AAAAmC,AAAA,AAAAjC,AAAA+B,AAAA,AAAA9B,AAAA;AAAA,AAAA,AAAAH,AAAAmC;;AAAA,AAAA,AAAA,AAAA,AAAAC,AAAA,AAAA,AAAA/B,AAAA4B,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAAA,AAAA,AAAA;AAAA,AAAA,AAAAI,AAAA,AAAA,AAAAhC,AAAA+B,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAAA,AAAA,AAAA;AAAA,AAAAC;AAAA,AAAA,AAAArC,AAAAkC;;AAAR,AACE,AAACxB,AAAUsB,AAAEpB;;AAHhC,AAIE,AAAA,AAAC/B,AAAcN,AAAYwD;;AAE/B,AAAA,AAAMO,AAAY1B,AAAG2B;AAArB,AACE,AAACjC;;AACD,AAACwB,AAAclB;;AACf,AAAA4B,AAAA,AAAAzB,AAAUwB;AAAVE,AAAA;AAAAC,AAAA;AAAAC,AAAA;;AAAA,AAAA,AAAA,AAAA,AAAAA,AAAAD;AAAA,AAAA,AAAAD,AAAAE,AAAQxB;AAAR,AAAA,AACE,AAAA+B,AAAwB/B;AAAxB+B,AAAA,AAAA,AAAA,AAAA,AAAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAAA,AAAA,AAAA,AAAAC,AAAA,AAAAD,AAAA,AAAA,AAAA,AAAA,AAAAE,AAAAC,AAAAH,AAAAA;AAAA,AAAAI,AAAAJ,AAAA,AAAcM;AAAd,AAAAF,AAAAJ,AAAA,AAAiB7B;AACX9C,AAAG,AAACiB,AAAegE;AADzB,AAEE,AAAA,AAAA,AAAClF,AACAC;;AADD,AAGE,AAAA,AAAmBqC,AAAGS;;;;AACxB,AAAA,AAAA,AAAC/C,AACAC;;AADD,AAGE,AAAA,AAAmBqC,AAAGS;;;;AAV5B;AAAA,AAAAmB;AAAAC;AAAAC;AAAA,AAAAC,AAAA;;;;;;;AAAA,AAAAC,AAAA,AAAA7B,AAAAyB;AAAA,AAAA,AAAAI;AAAA,AAAA,AAAAJ,AAAAI;AAAA,AAAA,AAAA,AAAAC,AAAAL;AAAA,AAAAM,AAAA,AAAAC,AAAAP;AAAA,AAAA,AAAA,AAAAQ,AAAAR;AAAAM;AAAA,AAAAG,AAAAH;AAAA;;;;;;;AAAA,AAAA,AAAA7B,AAAAuB,AAAQrB;AAAR,AAAA,AACE,AAAAoC,AAAwBpC;AAAxBoC,AAAA,AAAA,AAAA,AAAA,AAAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAAA,AAAA,AAAA,AAAAJ,AAAA,AAAAI,AAAA,AAAA,AAAA,AAAA,AAAAH,AAAAC,AAAAE,AAAAA;AAAA,AAAAD,AAAAC,AAAA,AAAcC;AAAd,AAAAF,AAAAC,AAAA,AAAiBlC;AACX9C,AAAG,AAACiB,AAAegE;AADzB,AAEE,AAAA,AAAA,AAAClF,AACAC;;AADD,AAGE,AAAA,AAAmBqC,AAAGS;;;;AACxB,AAAA,AAAA,AAAC/C,AACAC;;AADD,AAGE,AAAA,AAAmBqC,AAAGS;;;;AAV5B;AAAA,AAAA,AAAAH,AAAAsB;AAAA;AAAA;AAAA;;;;;;;;AAAA;;;;;;AAYF,AAAA,AAAMiB,AAAY7C;AAAlB,AACE,AAAA8C,AAAA,AAAA3C,AAAA,AAAA;AAAA4C,AAAA;AAAAC,AAAA;AAAAC,AAAA;;AAAA,AAAA,AAAA,AAAA,AAAAA,AAAAD;AAAA,AAAA,AAAAD,AAAAE,AAAQxC;AAAR,AAAA,AACE,AAAA,AAAmBT,AAAGS;;AACtB,AAAA,AAAmBT,AAAGS;;AAFxB;AAAA,AAAAqC;AAAAC;AAAAC;AAAA,AAAAC,AAAA;;;;;;;AAAA,AAAAjB,AAAA,AAAA7B,AAAA2C;AAAA,AAAA,AAAAd;AAAA,AAAA,AAAAc,AAAAd;AAAA,AAAA,AAAA,AAAAC,AAAAa;AAAA,AAAAZ,AAAA,AAAAC,AAAAW;AAAA,AAAA,AAAA,AAAAV,AAAAU;AAAAZ;AAAA,AAAAG,AAAAH;AAAA;;;;;;;AAAA,AAAA,AAAA7B,AAAAyC,AAAQrC;AAAR,AAAA,AACE,AAAA,AAAmBT,AAAGS;;AACtB,AAAA,AAAmBT,AAAGS;;AAFxB;AAAA,AAAA,AAAAH,AAAAwC;AAAA;AAAA;AAAA;;;;;;;;AAAA;;;;;AAGA,AAACpB,AAAW1B,AAAGvC;;AACf,AAACyF,AAAYlD;;AAEf,AAAA,AAAMmD,AAAUC,AAAIC;AAApB,AACE,AAAMC,AAAG,AAAA,AAAUF;AACbG,AAAG,AAAA,AAAOD;AAAP,AAAW,AAAAE,AAAA,AAAA,AAAA;AAAA,AAAA,AAAAA,AAAAA,AAACH,AAAAA,AAAAA;;AADrB,AAEE,AAAOE,AAAGV;;AAEd,AAAA,AAAMY;AAAN,AACE,AAAM9F,AAAG,AAAA,AAACiB;AACJ8E,AAAO,AAAA,AAAA,AAACC,AAAOhG,AAA0B;AAAA,AAAA;;AAD/C,AAEE,AAAQ+F,AAAOP;;AAEnB,AAAA,AAAMS;AAAN,AACE,AAACH","names":["app.core/controls-scheme","app.core/listen-touch","el","press","cb","G__29469","G__29470","G__29471","goog.events/listen","goog.events/EventType.TOUCHSTART","goog.events/EventType.TOUCHEND","evt","G__29472","G__29473","G__29474","goog.events/EventType.MOUSEDOWN","goog.events/EventType.MOUSEUP","app.core/attach-levels","json","goog.dom/getElement","html","cljs.core.js__GT_clj.cljs$core$IFn$_invoke$arity$1","p1__29475#","cljs.core.map.cljs$core$IFn$_invoke$arity$2","clojure.string.join.cljs$core$IFn$_invoke$arity$1","target-obj-29476","*runtime-state*-orig-val__29478","oops.state/*runtime-state*","*runtime-state*-temp-val__29479","oops.state/prepare-state","js/Error","parent-obj-29477","oops.core/validate-object-access-dynamically","app.core/setup-load","req","goog.net.XhrIo/send","goog.net.EventType/COMPLETE","app.core/send-char","chrs","ci","vec__29480","seq__29481","cljs.core/seq","first__29482","cljs.core/first","cljs.core/next","c","tail","code","js/module$node_modules$keycoder$dist$keycoder.fromCharacter","target-obj-29483","*runtime-state*-orig-val__29486","*runtime-state*-temp-val__29487","next-obj-29484","next-obj-29485","cljs.core/empty?","js/setTimeout","app.core/listen-select","listener","v","target-obj-29488","*runtime-state*-orig-val__29491","*runtime-state*-temp-val__29492","next-obj-29489","next-obj-29490","app.core/setup-keys","controls","seq__29493","chunk__29494","count__29495","i__29496","temp__5735__auto__","cljs.core/chunked-seq?","c__4609__auto__","cljs.core/chunk-first","cljs.core/chunk-rest","cljs.core/count","map__29501","cljs.core/PROTOCOL_SENTINEL","cljs.core.apply.cljs$core$IFn$_invoke$arity$2","cljs.core/hash-map","cljs.core.get.cljs$core$IFn$_invoke$arity$2","map__29503","id","app.core/process-ci","seq__29505","chunk__29506","count__29507","i__29508","app.mouse/setup-mouse","app.core/on-ready","fs","main","p1","p2","G__29509","app.core/launch","runner","js/Dos","app.core/main!"],"sourcesContent":["(ns app.core\n  (:require\n   [clojure.string :refer [join]]\n   [\"js-dos\"]\n   [\"keycoder\" :refer [fromCharacter]]\n   [goog.dom :as dom]\n   [goog.dom.safe :as safe]\n   [goog.events :as events]\n   [goog.net.XhrIo :as XhrIo]\n   [goog.net.EventType :as NetEvents]\n   [oops.core :refer [oget oset!]]\n   [app.mouse :refer [setup-mouse]]))\n\n(def controls-scheme\n  [{:id \"space\"\n    :code 32}\n   {:id \"r\"\n    :code 82}])\n\n(defn listen-touch [el press cb]\n  (events/listen\n   el\n   (if press\n     events/EventType.TOUCHSTART\n     events/EventType.TOUCHEND)\n   (fn [evt]\n     (.preventDefault evt)\n     (cb)))\n  (events/listen\n   el\n   (if press\n     events/EventType.MOUSEDOWN\n     events/EventType.MOUSEUP)\n   (fn [evt]\n     (.preventDefault evt)\n     (cb))))\n\n(defn attach-levels [json]\n  (let [el (dom/getElement \"load\")\n        html (->>\n               json\n               js->clj\n               (map #(str\n                       \"<option value=\\\"\"\n                       (% 2)\n                       \"\\\">\"\n                       (% 0) \". \" (% 1)\n                       \"</option>\"))\n               join)]\n    (oset! el \"innerHTML\" html)))\n\n(defn setup-load []\n  (let [req (XhrIo/send \"chip_levels.json\")\n        el (dom/getElement \"load\")]\n    (.listen req NetEvents/COMPLETE #(-> req .getResponseJson attach-levels))))\n\n(defn send-char [chrs ci]\n  (let [[c & tail] chrs\n        code (if c\n               (-> c\n                   fromCharacter\n                   (oget \"keyCode.ie\"))\n               0)]\n    (if (empty? c)\n      (.simulateKeyPress ci 13)\n      (do\n        (.simulateKeyPress ci code)\n        (js/setTimeout #(send-char tail ci) 200)))))\n\n(defn listen-select [ci]\n  (let [el (dom/getElement \"load\")\n        listener (fn [evt]\n                   (let [v (oget evt \"target.value\")]\n                     (send-char v ci)))]\n    (events/listen el \"change\" listener)))\n\n(defn setup-keys [ci controls]\n  (setup-load)\n  (listen-select ci)\n  (doseq [c controls]\n    (let [{:keys [id code]} c\n          el (dom/getElement id)]\n      (listen-touch\n       el\n       true\n       #(.simulateKeyEvent ci code true))\n      (listen-touch\n       el\n       false\n       #(.simulateKeyEvent ci code false)))))\n\n(defn process-ci [ci]\n  (doseq [code '(52 66 13)]\n    (.simulateKeyEvent ci code true)\n    (.simulateKeyEvent ci code false))\n  (setup-keys ci controls-scheme)\n  (setup-mouse ci))\n\n(defn on-ready [fs, main]\n  (let [p1 (.extract fs \"chip.zip\")\n        p2 (.then p1 #(main #js [\"-c\" \"CHIPS.EXE\"]))]\n    (.then p2 process-ci)))\n\n(defn launch []\n  (let [el (dom/getElement \"playerbox\")\n        runner (js/Dos el #js {:cycles 2000 :log (fn [] ())})]\n    (.ready runner on-ready)))\n\n(defn main! []\n  (launch))\n"]}