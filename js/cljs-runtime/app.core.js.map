{"version":3,"sources":["app/core.cljs"],"mappings":"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","names":["app.core/controls-scheme","app.core/listen-touch","el","press","cb","G__27016","G__27017","G__27018","goog.events/listen","goog.events/EventType.TOUCHSTART","goog.events/EventType.TOUCHEND","evt","G__27019","G__27020","G__27021","goog.events/EventType.MOUSEDOWN","goog.events/EventType.MOUSEUP","app.core/setup-keys","ci","controls","seq__27022","cljs.core/seq","chunk__27023","count__27024","i__27025","temp__5735__auto__","cljs.core/chunked-seq?","c__4609__auto__","cljs.core/chunk-first","cljs.core/chunk-rest","cljs.core/count","cljs.core/first","cljs.core/next","c","map__27030","cljs.core/PROTOCOL_SENTINEL","cljs.core.apply.cljs$core$IFn$_invoke$arity$2","cljs.core/hash-map","cljs.core.get.cljs$core$IFn$_invoke$arity$2","map__27032","id","code","goog.dom/getElement","app.core/process-ci","seq__27034","chunk__27035","count__27036","i__27037","app.mouse/setup-mouse","app.core/on-ready","fs","main","p1","p2","G__27038","app.core/launch","runner","js/Dos","app.core/main!"],"sourcesContent":["(ns app.core\n  (:require\n   [\"js-dos\"]\n   [goog.dom :as dom]\n   [goog.events :as events]\n   [app.mouse :refer [setup-mouse]]))\n\n(def controls-scheme\n  [{:id \"space\"\n    :code 32}\n   {:id \"r\"\n    :code 82}])\n\n(defn listen-touch [el press cb]\n  (events/listen\n   el\n   (if press\n     events/EventType.TOUCHSTART\n     events/EventType.TOUCHEND)\n   (fn [evt]\n     (.preventDefault evt)\n     (cb)))\n  (events/listen\n   el\n   (if press\n     events/EventType.MOUSEDOWN\n     events/EventType.MOUSEUP)\n   (fn [evt]\n     (.preventDefault evt)\n     (cb))))\n\n(defn setup-keys [ci controls]\n  (doseq [c controls]\n    (let [{:keys [id code]} c\n          el (dom/getElement id)]\n      (listen-touch\n       el\n       true\n       #(.simulateKeyEvent ci code true))\n      (listen-touch\n       el\n       false\n       #(.simulateKeyEvent ci code false)))))\n\n(defn process-ci [ci]\n  (doseq [code '(52 66 13)]\n    (.simulateKeyEvent ci code true))\n  (setup-keys ci controls-scheme)\n  (setup-mouse ci))\n\n(defn on-ready [fs, main]\n  (let [p1 (.extract fs \"chip.zip\")\n        p2 (.then p1 #(main #js [\"-c\" \"CHIPS.EXE\"]))]\n    (.then p2 process-ci)))\n\n(defn launch []\n  (let [el (dom/getElement \"playerbox\")\n        runner (js/Dos el #js {:cycles 2000})]\n    (.ready runner on-ready)))\n\n(defn main! []\n  (launch))\n"]}