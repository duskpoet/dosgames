{"version":3,"sources":["app/core.cljs"],"mappings":"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","names":["app.core/controls-scheme","app.core/listen-touch","el","press","cb","G__26501","G__26502","G__26503","goog.events/listen","goog.events/EventType.TOUCHSTART","goog.events/EventType.TOUCHEND","evt","G__26504","G__26505","G__26506","goog.events/EventType.MOUSEDOWN","goog.events/EventType.MOUSEUP","app.core/set-positions","keysEl","goog.dom/getElement","container","h","goog.style/getContentBoxSize","goog.style/setHeight","seq__26507","cljs.core/seq","chunk__26508","count__26509","i__26510","temp__5735__auto__","cljs.core/chunked-seq?","c__4609__auto__","cljs.core/chunk-first","cljs.core/chunk-rest","cljs.core/count","cljs.core/first","cljs.core/next","c","map__26527","cljs.core/PROTOCOL_SENTINEL","cljs.core.apply.cljs$core$IFn$_invoke$arity$2","cljs.core/hash-map","cljs.core.get.cljs$core$IFn$_invoke$arity$2","map__26535","pos","id","styl","cljs.core.mapcat.cljs$core$IFn$_invoke$arity$variadic","p__26529","vec__26530","cljs.core.nth.cljs$core$IFn$_invoke$arity$3","p__26537","vec__26538","k","v","px","cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2","cljs.core.print.cljs$core$IFn$_invoke$arity$variadic","G__26533","G__26534","G__26541","G__26542","goog.style/setStyle","cljs.core/clj->js","app.core/setup-keys","ci","controls","seq__26543","chunk__26544","count__26545","i__26546","map__26551","map__26553","code","app.core/fullscreen","goog.dom.fullscreen/requestFullScreen","app.core/listen-fullscreen","btn","app.core/process-ci","app.core/on-ready","fs","main","p1","p2","G__26555","js/setTimeout","app.core/launch","runner","js/Dos","app.core/main!"],"sourcesContent":["(ns app.core\n  (:require\n   [\"js-dos\"]\n   [goog.dom :as dom]\n   [goog.dom.fullscreen :refer [requestFullScreen]]\n   [goog.events :as events]\n   [goog.style :as styles]))\n\n(def controls-scheme\n  [{:id \"left\"\n    :code 37\n    :pos {:size 0.25\n          :top 0.25\n          :left 0}}\n\n   {:id \"right\"\n    :code 39\n    :pos {:size 0.25\n          :top 0.25\n          :left 0.5}}\n\n   {:id \"up\"\n    :code 38\n    :pos {:size 0.25\n          :top 0\n          :left 0.25}}\n\n   {:id \"down\"\n    :code 40\n    :pos {:size 0.25\n          :bottom 0.25\n          :left 0.25}}\n\n   {:id \"enter\"\n    :code 13\n    :pos {:size 0.25\n          :top 0.25\n          :right 0.25}}\n\n   {:id \"space\"\n    :code 32\n    :pos {:size 0.25\n          :top 0.25\n          :right 0.5}}])\n\n(defn listen-touch [el press cb]\n  (events/listen\n    el\n    (if press\n      events/EventType.TOUCHSTART\n      events/EventType.TOUCHEND)\n    (fn [evt]\n      (.preventDefault evt)\n      (cb)))\n  (events/listen\n    el\n    (if press\n      events/EventType.MOUSEDOWN\n      events/EventType.MOUSEUP)\n    (fn [evt]\n      (.preventDefault evt)\n      (cb))))\n\n(defn set-positions []\n  (let [keysEl (dom/getElement \"keys\")\n        container (dom/getElement \"player-container\")\n        h (-> container styles/getContentBoxSize .-height (/ 2))]\n    (styles/setHeight keysEl h)\n    (doseq [c controls-scheme]\n      (let [{:keys [pos id]} c\n            el (dom/getElement id)\n            styl (apply hash-map (mapcat (fn [[k v]]\n                                           (let [px (str (* v h) \"px\")]\n                                            (if (= k :size)\n                                              [:width px :height px]\n                                              [k px])))\n                                        pos))]\n        (print styl)\n        (styles/setStyle el (clj->js styl))))))\n\n(defn setup-keys [ci controls]\n  (doseq [c controls]\n    (let [{:keys [id code]} c\n          el (dom/getElement id)]\n      (listen-touch\n       el\n       true\n       #(.simulateKeyEvent ci code true))\n      (listen-touch\n       el\n       false\n       #(.simulateKeyEvent ci code false)))))\n\n(defn fullscreen []\n  (let [el (dom/getElement \"player-container\")]\n    (requestFullScreen el)))\n\n(defn listen-fullscreen []\n  (let [btn (dom/getElement \"fullscreen\")]\n    (listen-touch btn true fullscreen)))\n\n(defn process-ci [ci]\n  (setup-keys ci controls-scheme))\n\n(defn on-ready [fs, main]\n  (let [p1 (.extract fs \"chip.zip\")\n        p2 (.then p1 #(main #js [\"-c\" \"CHIPS.EXE\"]))]\n    (.then p2 process-ci)\n    (listen-fullscreen)\n    (js/setTimeout set-positions 1000)))\n\n(defn launch []\n  (let [el (dom/getElement \"playerbox\")\n        runner (js/Dos el)]\n    (.ready runner on-ready)))\n\n(defn main! []\n  (launch))\n"]}